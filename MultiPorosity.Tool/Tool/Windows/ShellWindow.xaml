<controls:MetroWindow x:Class="MultiPorosity.Tool.ShellWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                      xmlns:sys="clr-namespace:System;assembly=mscorlib"
                      xmlns:listCollection="clr-namespace:System.Collections;assembly=mscorlib"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:local="clr-namespace:MultiPorosity.Tool"
                      xmlns:eui="http://www.engineering.ui"
                      xmlns:prism="http://prismlibrary.com/"
                      xmlns:kokkos="clr-namespace:Kokkos;assembly=Kokkos.NET"
                      prism:ViewModelLocator.AutoWireViewModel="True"
                      mc:Ignorable="d"
                      Height="1000"
                      Width="1500"
                      WindowStartupLocation="CenterScreen"
                      WindowStyle="ThreeDBorderWindow"
                      Title="{Binding Path=Title}"
                      ResizeMode="CanResizeWithGrip"
                      Icon="{StaticResource NindraIcon}"
                      Style="{StaticResource CustomMetroWindow}">
    <!--<Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/ShellWindowResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>-->

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Path=LoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding Path=UnloadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <Button Width="{Binding ElementName=hamburgerMenu, Path=CompactPaneLength}"
                    AutomationProperties.Name="{x:Static local:Strings.ShellGoBackButton}"
                    ToolTip="{x:Static local:Strings.ShellGoBackButton}"
                    Command="{Binding Path=GoBackCommand}">
                <TextBlock Text="&#xE72B;"
                           FontSize="14"
                           FontFamily="Segoe MDL2 Assets"
                           AutomationProperties.Name="{x:Static local:Strings.ShellGoBackButton}"/>
            </Button>
            <Button Width="{Binding ElementName=hamburgerMenu, Path=CompactPaneLength}"
                    AutomationProperties.Name="{x:Static local:Strings.ShellGoForwardButton}"
                    ToolTip="{x:Static local:Strings.ShellGoForwardButton}"
                    Command="{Binding Path=GoForwardCommand}">
                <TextBlock Text="&#xE72A;"
                           FontSize="14"
                           FontFamily="Segoe MDL2 Assets"
                           AutomationProperties.Name="{x:Static local:Strings.ShellGoForwardButton}"/>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>

    <controls:MetroWindow.Content>
        <controls:HamburgerMenu x:Name="hamburgerMenu"
                                HamburgerButtonName="{x:Static local:Strings.ShellHamburgerButtonName}"
                                IsPaneOpen="False"
                                DisplayMode="CompactInline"
                                ItemsSource="{Binding Path=MenuItems}"
                                SelectedItem="{Binding Path=SelectedMenuItem}"
                                ItemCommand="{Binding Path=MenuItemInvokedCommand}"
                                OptionsItemsSource="{Binding Path=OptionMenuItems}"
                                SelectedOptionsItem="{Binding Path=SelectedOptionsMenuItem}"
                                OptionsItemCommand="{Binding Path=OptionsMenuItemInvokedCommand}"
                                OptionsItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                                ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}">
            <controls:HamburgerMenu.Content>
                <!--<eui:AdornerOverlay IsVisible="{Binding Path=IsProgressRingVisible}"
                                Width="Auto"
                                Height="Auto"
                                Opacity="0.5">
                    <eui:AdornedControl.AdornedElement >
                            <controls:ProgressRing Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                   IsActive="{Binding Path=IsProgressRingVisible}"/>
                    </eui:AdornedControl.AdornedElement>
                </eui:AdornerOverlay>-->
                <Grid>
                    <ContentControl x:Name="hamburgerMenuContentControl"
                                    Visibility="{Binding Path=IsShellVisible, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                    <Grid Background="#80000000"
                          Visibility="{Binding Path=IsProgressRingVisible, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>


                        <StackPanel Grid.Column="1" Grid.Row="1">
                            <controls:ProgressRing Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                   IsActive="{Binding Path=IsProgressRingVisible, UpdateSourceTrigger=PropertyChanged}"/>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="CPU Usage: "/>
                                <controls:MetroProgressBar Width="150"
                                                           Margin="0,0,75,0"
                                                           Maximum="100"
                                                           Minimum="0"
                                                           Value="{Binding Path=CpuUsage, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="GPU Usage: "/>
                                <controls:MetroProgressBar Width="150"
                                                           Margin="0,0,75,0"
                                                           Maximum="100"
                                                           Minimum="0"
                                                           Value="{Binding Path=GpuUsage, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                        </StackPanel>

                        <!--<TextBlock Margin="0"
                                   TextWrapping="Wrap"
                                   Text="Please Wait..."
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="20"
                                   FontWeight="Bold"
                                   Foreground="#7EFFFFFF"/>-->

                    </Grid>
                </Grid>
            </controls:HamburgerMenu.Content>
        </controls:HamburgerMenu>
    </controls:MetroWindow.Content>

    <!--<local:MainView x:Name="MainView"/>-->

    <!--<StatusBar Grid.Row="1"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Bottom">

            <StatusBarItem HorizontalAlignment="Left"
                           Margin="5,0,5,0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center"
                               Text="Processing Unit: "/>
                    <ComboBox HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              MinWidth="100"
                              SelectedValue="{Binding Path=ExecutionSpace}"
                              ItemsSource="{Binding Source={eui:EnumBindingSource {x:Type kokkos:ExecutionSpaceKind}}}"/>
                </StackPanel>
            </StatusBarItem>-->

    <!--<fluent:StatusBarItem Title="Words Width"
                                  Value="150"
                                  IsEnabled="False"
                                  HorizontalAlignment="Left">
                <TextBlock Text="150 px"/>
            </fluent:StatusBarItem>

            <Separator HorizontalAlignment="Left"/>

            <fluent:StatusBarItem Title="Selected Words"
                                  Value="15"
                                  ToolTip="This is Selected Words"
                                  Content="15 words"
                                  HorizontalAlignment="Left"/>-->

    <!--<Separator HorizontalAlignment="Left"/>-->

    <!--<StatusBarItem Title="Used memory"
                                  HorizontalAlignment="Right"
                                  Value="{Binding UsedMemory, StringFormat={}{0:##\,000} KB}"/>-->

    <!--<StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Used memory: "/>
                    <TextBlock Text="{Binding Path=UsedMemory, StringFormat={}{0:##\,000} KB}"/>
                </StackPanel>
            </StatusBarItem>-->

    <!--<Separator HorizontalAlignment="Right"/>-->

    <!--<fluent:StatusBarItem Title="Zoom"
                                  HorizontalAlignment="Right"
                                  Value="{Binding Value, ElementName=zoomSlider, StringFormat={}{0:P}}" />

            <fluent:StatusBarItem Title="Test (no content, no value)"
                                  HorizontalAlignment="Right" />-->

    <!--<fluent:StatusBarItem Title="Zoom Slider"
                                  HorizontalAlignment="Right">
                <Slider x:Name="zoomSlider"
                        Minimum="0.5"
                        Maximum="2.0"
                        IsDirectionReversed="False"
                        Style="{DynamicResource ZoomSliderStyle}"
                        Value="{Binding Zoom}"
                        IsSnapToTickEnabled="True"
                        TickFrequency="0.1"
                        SmallChange="0.1"
                        LargeChange="0.1"
                        ValueChanged="ZoomSlider_OnValueChanged" />
            </fluent:StatusBarItem>-->
    <!--</StatusBar>-->

</controls:MetroWindow>
